log_format debug '[$time_local] $msec  "$request" $status conn=$connection sent=$bytes_sent body_sent=$body_bytes_sent';
include '<%= PhusionPassenger.resources_dir %>/mime.types';

passenger_root '<%= PhusionPassenger.install_spec %>';
passenger_abort_on_startup_error on;
passenger_ctl cleanup_pidfiles <%= serialize_strset("#{@working_dir}/temp_dir_toucher.pid") %>;
passenger_ctl integration_mode standalone;
passenger_ctl standalone_engine nginx;
passenger_user_switching off;

<% if @options[:ruby] %>
    passenger_ruby <%= @options[:ruby] %>;
<% else %>
    passenger_ruby <%= PlatformInfo.ruby_command %>;
<% end %>
<% if @options[:user] %>
    passenger_user <%= @options[:user] %>;
    passenger_default_user <%= @options[:user] %>;
    passenger_analytics_log_user <%= @options[:user] %>;
<% else %>
    passenger_user <%= current_user %>;
    passenger_default_user <%= current_user %>;
    passenger_analytics_log_user <%= current_user %>;
<% end %>

<%= nginx_http_option(:socket_backlog) %>
<%= nginx_http_option(:python) %>
<%= nginx_http_option(:nodejs) %>
<%= nginx_http_option(:log_level) %>
<%= nginx_http_option(:max_pool_size) %>
<%= nginx_http_option(:pool_idle_time) %>
<%= nginx_http_option(:max_preloader_idle_time) %>
<%= nginx_http_option(:turbocaching) %>
<%= nginx_http_option(:instance_registry_dir) %>
<%= nginx_http_option(:data_buffer_dir) %>
<%= nginx_http_option(:core_file_descriptor_ulimit) %>
<%= nginx_http_option(:union_station_gateway_address) %>
<%= nginx_http_option(:union_station_gateway_port) %>
<%= nginx_http_option(:union_station_gateway_cert) %>
<% @options[:ctls].each do |ctl| %>
    passenger_ctl '<%= ctl.split("=", 2)[0] %>' '<%= ctl.split("=", 2)[1] %>';
<% end %>
